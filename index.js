// Generated by CoffeeScript 1.8.0
(function() {
  var dateformat, now;

  dateformat = require('dateformat');

  now = function() {
    var ret;
    ret = new Date();
    return dateformat(new Date(), 'yyyymmddHHMMss');
  };

  angular.module('util.audio', []).config(function($sceDelegateProvider) {
    return $sceDelegateProvider.resourceUrlWhitelist(['self', 'https://mob.myvnc.com/**', 'filesystem:**', 'blob:**']);
  }).factory('audioService', function() {
    var Recorder, Wad;
    Wad = require('Wad/build/wad.js');
    Recorder = (function() {
      function Recorder() {
        this.media = new Wad.Poly({
          recConfig: {
            workerPath: 'lib/Wad/src/Recorderjs/recorderWorker.js'
          }
        });
        this.mic = new Wad({
          source: 'mic'
        });
        this.media.add(this.mic);
      }

      Recorder.prototype.start = function() {
        this.media.rec.clear();
        this.media.output.disconnect(this.media.destination);
        this.media.rec.record();
        return this.mic.play();
      };

      Recorder.prototype.stop = function() {
        this.mic.stop();
        this.media.rec.stop();
        this.media.output.connect(this.media.destination);
        return new Promise((function(_this) {
          return function(resolve, reject) {
            return _this.media.rec.exportWAV(function(blob) {
              blob.name = "" + (now()) + ".wav";
              blob.lastModifiedDate = new Date();
              _this.file = blob;
              if (_this.url) {
                URL.revokeObjectURL(_this.url);
              }
              _this.url = URL.createObjectURL(_this.file);
              return resolve(_this);
            });
          };
        })(this));
      };

      return Recorder;

    })();
    return {
      recorder: new Recorder()
    };
  });

}).call(this);
